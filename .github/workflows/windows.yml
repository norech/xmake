name: Windows

on:
  pull_request:
  push:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        arch: [x64, x86]

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # WyriHaximus/github-action-get-previous-tag@master need it
          fetch-depth: 0
          submodules: true
      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          # this is not supported, use dev branch instead
          # xmake-version: local#
          xmake-version: branch@dev
      - uses: dlang-community/setup-dlang@v1
        with:
          compiler: dmd-latest
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: tagName

      - name: Prepare
        run: |
          xmake show
          Invoke-WebRequest "https://github.com/xmake-mirror/nsis/releases/download/v30b3/nsis-3.04.zip" -UseBasicParsing -OutFile ./nsis.zip
          Invoke-WebRequest "https://github.com/xmake-mirror/nsis/releases/download/v30b3/nsis-3.04-strlen_8192.zip" -UseBasicParsing -OutFile ./nsis-longstr.zip
          Invoke-WebRequest "https://github.com/xmake-mirror/nsis/releases/download/v30b3/UAC.zip" -UseBasicParsing -OutFile ./nsis-uac.zip
          Expand-Archive ./nsis.zip -DestinationPath ./nsis
          Move-Item ./nsis/*/* ./nsis
          Expand-Archive ./nsis-longstr.zip -DestinationPath ./nsis -Force
          Expand-Archive ./nsis-uac.zip -DestinationPath ./nsis -Force
          Move-Item ./nsis/UAC.nsh ./nsis/Include/

      - name: Build
        run: |
          xmake f -vD -P core -a ${{ matrix.arch }}
          xmake -vD -P core

      - name: Tests
        run: |
          Copy-Item ./core/build/xmake.exe ./xmake
          Copy-Item ./scripts/xrepo.bat ./xmake
          Copy-Item ./scripts/xrepo.ps1 ./xmake
          $Env:XMAKE_PROGRAM_DIR = $(Resolve-Path ./xmake)
          Set-Item -Path Env:Path -Value ($Env:XMAKE_PROGRAM_DIR + ";" + $Env:Path)
          xrepo --version
          xmake show
          #xmake l -v private.utils.bcsave --rootname='@programdir' -x 'scripts/**|templates/**' xmake
          xmake lua -v -D tests/run.lua
          xrepo install -D "openssl 1.1.1-k"
          xrepo export -o output openssl --shallow "1.1.1-k"

